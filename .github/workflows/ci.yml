name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

permissions:
  contents: read

env:
  ImageOS: "ubuntu20"
  MIX_ENV: "test"
  OTP_VERSION_SPEC: "25.2"
  ELIXIR_VERSION_SPEC: "1.14.3"

jobs:
  unit-tests:
    name: Build and unit test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION_SPEC }}
          elixir-version: ${{ env.ELIXIR_VERSION_SPEC }}
          version-type: "strict"
      - name: Install dependencies
        run: mix deps.get
      - name: Run tests
        run: mix test --exclude integration:true

  integration-tests:
    name: Build and integration test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION_SPEC }}
          elixir-version: ${{ env.ELIXIR_VERSION_SPEC }}
          version-type: "strict"
      - name: Install dependencies
        run: mix deps.get
      - name: Installs Surreal DB on VM
        run: curl -sSf https://install.surrealdb.com | sh
      - name: Adds Surreal DB to PATH environment variable
        run: echo "/usr/local/bin/surreal" >> $GITHUB_PATH
      - name: Starts In-Memory Surreal DB
        run: surreal start --log trace --user root --pass root memory &
      - name: Run tests
        run: mix test --only integration:true

  publish:
    name: Publish new version of the package
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION_SPEC }}
          elixir-version: ${{ env.ELIXIR_VERSION_SPEC }}
          version-type: "strict"
      - name: Install dependencies
        run: touch config/dev.exs && MIX_ENV=dev mix deps.get
      - name: Publish package to hex.pm
        run: HEX_API_KEY=${{ secrets.HEX_API_KEY }} mix hex.publish --yes
